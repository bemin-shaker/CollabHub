{"version":3,"sources":["firebase.js","components/Header.js","features/appSlice.js","components/groupPrompt.js","components/SidebarOption.js","components/Sidebar.js","components/ChatInput.js","components/Message.js","components/Chat.js","components/Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","Header","useAuthState","user","HeaderContainer","HeaderLeft","HeaderAvatar","onClick","signOut","alt","displayName","src","photoURL","HeaderSearch","placeholder","HeaderRight","styled","div","Avatar","appSlice","createSlice","name","initialState","roomId","reducers","enterRoom","state","action","payload","actions","selectRoomId","app","groupName","prompt","GroupPrompt","SidebarOption","Icon","title","addChannelOption","id","dispatch","useDispatch","SidebarOptionContianer","channelName","collection","add","fontSize","style","padding","SidebarOptionChannel","h3","Sidebar","useCollection","channels","SidebarContainer","SidebarHeader","SidebarInfo","InsertCommentIcon","InboxIcon","BookmarkBorderIcon","AddIcon","docs","map","doc","data","ChatInput","channelId","chatRef","useState","input","setInput","ChatInputContainer","value","onChange","e","target","Button","hidden","type","preventDefault","message","timestamp","FieldValue","serverTimestamp","userImage","current","scrollIntoView","behavior","Message","MessageContainer","MessageInfo","Date","toDate","toUTCString","Chat","useRef","useSelector","useDocument","roomDetails","orderBy","roomMessages","loading","useEffect","ChatContainer","ChatMessages","ChatBottom","ref","Login","LoginContainer","LoginInnerContainer","signInWithPopup","catch","error","alert","Spinner","require","App","AppLoading","AppLoadingContents","color","fadeIn","className","AppBody","path","exact","store","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oSAYMA,EADcC,IAASC,cATN,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAIcC,YACjBC,EAAOT,IAASS,OAChBC,EAAW,IAAIV,IAASS,KAAKE,mB,OCoBpBC,MAzBf,WACE,MAAeC,YAAaJ,GAArBK,EAAP,oBACA,OACE,eAACC,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,CACEC,QAAS,kBAAMT,EAAKU,WACpBC,IAAG,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAMO,YACXC,IAAG,OAAER,QAAF,IAAEA,OAAF,EAAEA,EAAMS,WAEb,cAAC,IAAD,OAGF,eAACC,EAAD,WACE,cAAC,IAAD,IACA,uBAAOC,YAAY,cAGrB,cAACC,EAAD,UACE,cAAC,IAAD,UAQFF,EAAeG,IAAOC,IAAV,0XAqBZb,EAAkBY,IAAOC,IAAV,0NAWfZ,EAAaW,IAAOC,IAAV,0LAYVF,EAAcC,IAAOC,IAAV,sKAWXX,EAAeU,YAAOE,IAAPF,CAAH,sF,oFCpFLG,EAAWC,YAAY,CAClCC,KAAM,MACNC,aAAc,CACZC,OAAQ,MAGVC,SAAU,CACRC,UAAW,SAACC,EAAOC,GACjBD,EAAMH,OAASI,EAAOC,QAAQL,WAKrBE,EAAcN,EAASU,QAAvBJ,UAEFK,EAAe,SAACJ,GAAD,OAAWA,EAAMK,IAAIR,QAElCJ,IAAf,QCtBaa,EAAYC,OAAO,+BAMjBC,I,IAAAA,EAJf,WACE,OAAO,8BC6CMC,I,SAAAA,GAxCf,YAA+D,IAAtCC,EAAqC,EAArCA,KAAMC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,iBAAkBC,EAAM,EAANA,GACtD,EAAerC,YAAaJ,GACtB0C,GADN,oBACiBC,eAsBjB,OACE,eAACC,GAAD,CACEnC,QAAS+B,EAtBM,WACjB,IAAMK,EAAcV,OAAO,iCAEvBU,GACFvD,EAAGwD,WAAWZ,GAAWa,IAAI,CAC3BxB,KAAMsB,KAKU,WAChBJ,GACFC,EACEf,EAAU,CACRF,OAAQgB,MAOd,UAGGH,GAAQ,cAACA,EAAD,CAAMU,SAAS,QAAQC,MAAO,CAAEC,QAAS,MACjDZ,EACC,6BAAKC,IAEL,eAACY,GAAD,WACE,qCADF,IACkBZ,SASpBK,GAAyB1B,IAAOC,IAAV,8RAqBtBgC,GAAuBjC,IAAOkC,GAAV,qE,6BCnBXC,I,GAAAA,GA/Bf,WACE,MAAejD,YAAaJ,GAArBK,EAAP,oBAEA,EAAmCiD,aAAchE,EAAGwD,WAAWZ,IAA/D,mBAAOqB,EAAP,KAEA,OAFA,UAGE,eAACC,GAAD,WACE,cAACC,GAAD,UACE,eAACC,GAAD,WACE,6BAAKxB,IACL,+BACE,cAAC,IAAD,IACC7B,EAAKO,oBAKZ,cAAC,GAAD,CAAe0B,KAAMqB,IAAmBpB,MAAM,YAC9C,cAAC,GAAD,CAAeD,KAAMsB,IAAWrB,MAAM,yBACtC,cAAC,GAAD,CAAeD,KAAMuB,IAAoBtB,MAAM,oBAE/C,uBACA,cAAC,GAAD,CAAeD,KAAMwB,KAAStB,kBAAgB,EAACD,MAAM,gBAhBvD,OAkBGgB,QAlBH,IAkBGA,OAlBH,EAkBGA,EAAUQ,KAAKC,KAAI,SAACC,GAAD,OAClB,cAAC,GAAD,CAA4BxB,GAAIwB,EAAIxB,GAAIF,MAAO0B,EAAIC,OAAO3C,MAAtC0C,EAAIxB,WAQ1Be,GAAmBtC,IAAOC,IAAV,wSAgBhBsC,GAAgBvC,IAAOC,IAAV,6PAabuC,GAAcxC,IAAOC,IAAV,wW,kDCjCFgD,I,MAAAA,GA1Cf,YAAyD,IAApCtB,EAAmC,EAAnCA,YAAauB,EAAsB,EAAtBA,UAAWC,EAAW,EAAXA,QAC3C,EAAejE,YAAaJ,GAArBK,EAAP,oBACA,EAA0BiE,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAwBA,OACE,cAACC,GAAD,UACE,iCACE,uBACEC,MAAOH,EACPI,SAAU,SAACC,GAAD,OAAOJ,EAASI,EAAEC,OAAOH,QACnC1D,YAAW,mBAAc6B,KAE3B,cAACiC,GAAA,EAAD,CAAQC,QAAM,EAACC,KAAK,SAASvE,QA9Bf,SAACmE,GAAO,IAAD,EAGzB,GAFAA,EAAEK,kBAEGb,EACH,OAAO,EAIT9E,EAAGwD,WAAWZ,GAAW+B,IAAIG,GAAWtB,WAAW,YAAYC,IAAI,CACjEmC,QAASX,EACTY,UAAW5F,IAASQ,UAAUqF,WAAWC,kBACzChF,KAAMA,EAAKO,YACX0E,UAAWjF,EAAKS,WAGX,OAAPuD,QAAO,IAAPA,GAAA,UAAAA,EAASkB,eAAT,SAAkBC,eAAe,CAC/BC,SAAU,WAGZjB,EAAS,KAWL,wBAUFC,GAAqBvD,IAAOC,IAAV,kYCrCTuE,I,kBAAAA,GAdf,YAA2D,IAAxCR,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,UAAW9E,EAAmB,EAAnBA,KAAMiF,EAAa,EAAbA,UAC3C,OACE,eAACK,GAAD,WACE,qBAAK9E,IAAKyE,EAAW3E,IAAI,KACzB,eAACiF,GAAD,WACE,+BACGvF,EADH,IACS,+BAAO,IAAIwF,KAAJ,OAASV,QAAT,IAASA,OAAT,EAASA,EAAWW,UAAUC,mBAE9C,4BAAIb,WAQNS,GAAmBzE,IAAOC,IAAV,0KAYhByE,GAAc1E,IAAOC,IAAV,mKCsDF6E,I,MAAAA,GArEf,WACE,MAAe5F,YAAaJ,GACtBqE,GADN,oBACgB4B,iBAAO,OACjBxE,EAASyE,YAAYlE,GAE3B,EAAsBmE,aACpB1E,GAAUnC,EAAGwD,WAAWZ,GAAW+B,IAAIxC,IADlC2E,EAAP,oBAGA,EAAgC9C,aAC9B7B,GACEnC,EACGwD,WAAWZ,GACX+B,IAAIxC,GACJqB,WAAW,YACXuD,QAAQ,YAAa,QAN5B,mBAAOC,EAAP,KAAqBC,EAArB,KAeA,OANAC,qBAAU,WAAO,IAAD,EACP,OAAPnC,QAAO,IAAPA,GAAA,UAAAA,EAASkB,eAAT,SAAkBC,eAAe,CAC/BC,SAAU,aAEX,CAAChE,EAAQ8E,IAGV,cAACE,GAAD,UACGL,GAAeE,GACd,qCACE,eAAC,GAAD,WACE,eAAC,GAAD,WACE,6BACE,8CAAUF,QAAV,IAAUA,OAAV,EAAUA,EAAalC,OAAO3C,UAEhC,cAAC,KAAD,OAGF,cAAC,GAAD,UACE,8BACE,cAAC,KAAD,IADF,mBAMJ,eAACmF,GAAD,kBACGJ,QADH,IACGA,OADH,EACGA,EAAcvC,KAAKC,KAAI,SAACC,GACvB,MAAgDA,EAAIC,OAA5CgB,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,UAAW9E,EAA5B,EAA4BA,KAAMiF,EAAlC,EAAkCA,UAClC,OACE,cAAC,GAAD,CAEEJ,QAASA,EACTC,UAAWA,EACX9E,KAAMA,EACNiF,UAAWA,GAJNrB,EAAIxB,OAQf,cAACkE,GAAD,CAAYC,IAAKvC,OAGnB,cAAC,GAAD,CACEA,QAASA,EACTxB,YAAW,OAAEuD,QAAF,IAAEA,OAAF,EAAEA,EAAalC,OAAO3C,KACjC6C,UAAW3C,UAUjBkF,GAAazF,IAAOC,IAAV,wDAGVhB,GAASe,IAAOC,IAAV,4IAONuF,GAAexF,IAAOC,IAAV,4BAEZZ,GAAaW,IAAOC,IAAV,uPAgBVF,GAAcC,IAAOC,IAAV,gHAQXsF,GAAgBvF,IAAOC,IAAV,yGCtGJ0F,I,SAAAA,GAhBf,WAKE,OACE,cAACC,GAAD,UACE,eAACC,GAAD,WACE,qBAAKlG,IAAI,gFACT,uDACA,cAACiE,GAAA,EAAD,CAAQrE,QATC,SAACmE,GACdA,EAAEK,iBACFjF,EAAKgH,gBAAgB/G,GAAUgH,OAAM,SAACC,GAAD,OAAWC,MAAMD,EAAMhC,aAOxD,uCAQF4B,GAAiB5F,IAAOC,IAAV,wHAMd4F,GAAsB7F,IAAOC,IAAV,6UChBrBiG,GAAUC,EAAQ,IAuCPC,OArCf,WACE,MAAwBlH,YAAaJ,GAArC,mBAAOK,EAAP,KAEA,OAFA,KAII,cAACkH,GAAD,UACE,eAACC,GAAD,WACE,qBAAK3G,IAAI,gFACT,cAACuG,GAAD,CAAS7F,KAAK,wBAAwBkG,MAAM,MAAMC,OAAO,cAM/D,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,UACItH,EAGA,qCACE,cAAC,EAAD,IACA,eAACuH,GAAD,WACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,GAAD,MAEF,cAAC,EAAD,aAVN,cAAC,GAAD,SAsBJP,GAAarG,IAAOC,IAAV,0GAOVqG,GAAqBtG,IAAOC,IAAV,oQAelByG,GAAU1G,IAAOC,IAAV,kECzEA4G,GAAQC,YAAe,CAClCC,QAAS,CACPhG,IAAKiG,KCOWC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,GAAjB,SACE,cAAC,GAAD,QAGJY,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,iB","file":"static/js/main.3465939e.chunk.js","sourcesContent":["import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCDmvfIN9rb7UVxOJm11w5aKjxU6Ciihtw\",\n  authDomain: \"chat-app-9a2dc.firebaseapp.com\",\n  projectId: \"chat-app-9a2dc\",\n  storageBucket: \"chat-app-9a2dc.appspot.com\",\n  messagingSenderId: \"704681508613\",\n  appId: \"1:704681508613:web:42aab12ecadbb6d427016c\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, provider, db };\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Avatar } from \"@material-ui/core\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport HelpOutlineIcon from \"@material-ui/icons/HelpOutline\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"../firebase\";\n\nfunction Header() {\n  const [user] = useAuthState(auth);\n  return (\n    <HeaderContainer>\n      <HeaderLeft>\n        <HeaderAvatar\n          onClick={() => auth.signOut()}\n          alt={user?.displayName}\n          src={user?.photoURL}\n        />\n        <AccessTimeIcon />\n      </HeaderLeft>\n\n      <HeaderSearch>\n        <SearchIcon />\n        <input placeholder=\"Search\" />\n      </HeaderSearch>\n\n      <HeaderRight>\n        <HelpOutlineIcon />\n      </HeaderRight>\n    </HeaderContainer>\n  );\n}\n\nexport default Header;\n\nconst HeaderSearch = styled.div`\n  flex: 0.4;\n  opacity: 1;\n  border-radius: 6px;\n  background-color: #223a69;\n  text-align: center;\n  display: flex;\n  padding: 0 50px;\n  color: #1f487e;\n  border: 1px #1f487e solid;\n\n  > input {\n    background-color: transparent;\n    border: none;\n    text-align: center;\n    min-width: 30vw;\n    outline: 0;\n    color: white;\n  }\n`;\n\nconst HeaderContainer = styled.div`\n  display: flex;\n  position: fixed;\n  width: 100%;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px 0;\n  background-color: var(--chat-color);\n  color: white;\n`;\n\nconst HeaderLeft = styled.div`\n  flex: 0.3;\n  display: flex;\n  align-items: center;\n  margin-left: 20px;\n\n  > .MuiSvgIcon-root {\n    margin-left: auto;\n    margin-right: 30px;\n  }\n`;\n\nconst HeaderRight = styled.div`\n  flex: 0.3;\n  display: flex;\n  align-items: flex-end;\n\n  > .MuiSvgIcon-root {\n    margin-left: auto;\n    margin-right: 20px;\n  }\n`;\n\nconst HeaderAvatar = styled(Avatar)`\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.8;\n  }\n`;\n","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n  value: 0,\n  status: \"idle\",\n};\n\nexport const appSlice = createSlice({\n  name: \"app\",\n  initialState: {\n    roomId: null,\n  },\n\n  reducers: {\n    enterRoom: (state, action) => {\n      state.roomId = action.payload.roomId;\n    },\n  },\n});\n\nexport const { enterRoom } = appSlice.actions;\n\nexport const selectRoomId = (state) => state.app.roomId;\n\nexport default appSlice.reducer;\n","import React from \"react\";\n\nexport const groupName = prompt(\"Please enter the group name\");\n\nfunction GroupPrompt() {\n  return <></>;\n}\n\nexport default GroupPrompt;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { enterRoom } from \"../features/appSlice\";\nimport { db } from \"../firebase\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nimport { auth } from \"../firebase\";\nimport { groupName } from \"./groupPrompt\";\n\nfunction SidebarOption({ Icon, title, addChannelOption, id }) {\n  const [user] = useAuthState(auth);\n  const dispatch = useDispatch();\n\n  const addChannel = () => {\n    const channelName = prompt(\"Please enter the channel name\");\n    //const userN = user?.uid;\n    if (channelName) {\n      db.collection(groupName).add({\n        name: channelName,\n      });\n    }\n  };\n\n  const selectChannel = () => {\n    if (id) {\n      dispatch(\n        enterRoom({\n          roomId: id,\n        })\n      );\n    }\n  };\n\n  return (\n    <SidebarOptionContianer\n      onClick={addChannelOption ? addChannel : selectChannel}\n    >\n      {Icon && <Icon fontSize=\"small\" style={{ padding: 10 }} />}\n      {Icon ? (\n        <h3>{title}</h3>\n      ) : (\n        <SidebarOptionChannel>\n          <span>#</span> {title}\n        </SidebarOptionChannel>\n      )}\n    </SidebarOptionContianer>\n  );\n}\n\nexport default SidebarOption;\n\nconst SidebarOptionContianer = styled.div`\n  display: flex;\n  font-size: 12px;\n  align-items: center;\n  padding-left: 2px;\n\n  cursor: pointer;\n\n  :hover {\n    opacity: 0.9;\n    background-color: #182c55;\n  }\n  > h3 {\n    font-weight: 500;\n  }\n\n  > h3 > span {\n    padding: 15px;\n  }\n`;\n\nconst SidebarOptionChannel = styled.h3`\n  padding: 10px 0;\n  font-weight: 300;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport InsertCommentIcon from \"@material-ui/icons/InsertComment\";\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport AppsIcon from \"@material-ui/icons/Apps\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport SidebarOption from \"./SidebarOption\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport { db } from \"../firebase\";\nimport { useCollection } from \"react-firebase-hooks/firestore\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"../firebase\";\n\nimport { groupName } from \"./groupPrompt\";\n\nfunction Sidebar() {\n  const [user] = useAuthState(auth);\n  //const userN = user?.uid;\n  const [channels, loading, error] = useCollection(db.collection(groupName));\n\n  return (\n    <SidebarContainer>\n      <SidebarHeader>\n        <SidebarInfo>\n          <h2>{groupName}</h2>\n          <h3>\n            <FiberManualRecordIcon />\n            {user.displayName}\n          </h3>\n        </SidebarInfo>\n      </SidebarHeader>\n\n      <SidebarOption Icon={InsertCommentIcon} title=\"Threads\" />\n      <SidebarOption Icon={InboxIcon} title=\"Mentions & reactions\" />\n      <SidebarOption Icon={BookmarkBorderIcon} title=\"Channel browser\" />\n\n      <hr />\n      <SidebarOption Icon={AddIcon} addChannelOption title=\"Add channel\" />\n\n      {channels?.docs.map((doc) => (\n        <SidebarOption key={doc.id} id={doc.id} title={doc.data().name} />\n      ))}\n    </SidebarContainer>\n  );\n}\n\nexport default Sidebar;\n\nconst SidebarContainer = styled.div`\n  background-color: var(--chat-color);\n  color: white;\n  flex: 0.3;\n  border-top: 1px solid #1f487e;\n  max-width: 260px;\n  min-width: 200px;\n  margin-top: 60px;\n\n  > hr {\n    margin-top: 10px;\n    margin-bottom: 10px;\n    border: 1px solid #1f487e;\n  }\n`;\n\nconst SidebarHeader = styled.div`\n  display: flex;\n  border-bottom: 1px solid #1f487e;\n  padding: 13px;\n\n  > .MuiSvgIcon-root {\n    padding: 9px;\n    color: #49274b;\n    font-size: 18px;\n    background-color: white;\n    border-radius: 999px;\n  }\n`;\nconst SidebarInfo = styled.div`\n  flex: 1;\n\n  > h2 {\n    font-size: 15px;\n    font-weight: 900;\n    margin-bottom: 5px;\n  }\n\n  > h3 {\n    display: flex;\n    font-size: 13px;\n    font-weight: 400;\n    align-items: center;\n  }\n\n  > h3 > .MuiSvgIcon-root {\n    font-size: 14px;\n    margin-top: 1px;\n    margin-right: 2px;\n    color: green;\n  }\n`;\n","import React, { useRef, useState } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport { db } from \"../firebase\";\nimport firebase from \"firebase\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"../firebase\";\nimport { groupName } from \"./groupPrompt\";\n\nfunction ChatInput({ channelName, channelId, chatRef }) {\n  const [user] = useAuthState(auth);\n  const [input, setInput] = useState(\"\");\n\n  const sendMessage = (e) => {\n    e.preventDefault();\n\n    if (!channelId) {\n      return false;\n    }\n    //const userN = user?.uid;\n\n    db.collection(groupName).doc(channelId).collection(\"messages\").add({\n      message: input,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n      user: user.displayName,\n      userImage: user.photoURL,\n    });\n\n    chatRef?.current?.scrollIntoView({\n      behavior: \"smooth\",\n    });\n\n    setInput(\"\");\n  };\n\n  return (\n    <ChatInputContainer>\n      <form>\n        <input\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder={`Message #${channelName}`}\n        ></input>\n        <Button hidden type=\"submit\" onClick={sendMessage}>\n          SEND\n        </Button>\n      </form>\n    </ChatInputContainer>\n  );\n}\n\nexport default ChatInput;\n\nconst ChatInputContainer = styled.div`\n  border-radius: 20px;\n\n  > form {\n    position: relative;\n    display: flex;\n    justify-content: center;\n  }\n\n  > form > input {\n    position: fixed;\n    bottom: 30px;\n    width: 60%;\n    border: 1px solid gray;\n    border-radius: 3px;\n    padding: 20px;\n    outline: none;\n  }\n\n  > form > button {\n    display: none !important;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nfunction Message({ message, timestamp, user, userImage }) {\n  return (\n    <MessageContainer>\n      <img src={userImage} alt=\"\" />\n      <MessageInfo>\n        <h4>\n          {user} <span>{new Date(timestamp?.toDate()).toUTCString()}</span>\n        </h4>\n        <p>{message}</p>\n      </MessageInfo>\n    </MessageContainer>\n  );\n}\n\nexport default Message;\n\nconst MessageContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 20px;\n\n  > img {\n    height: 50px;\n    width: 50px;\n    border-radius: 50%;\n  }\n`;\n\nconst MessageInfo = styled.div`\n  padding-left: 10px;\n\n  > h4 > span {\n    color: gray;\n    font-weight: 300;\n    margin-left: 4px;\n    font-size: 10px;\n  }\n`;\n","import React, { useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport StarBorderIcon from \"@material-ui/icons/StarBorder\";\nimport InfoOutlinedIcon from \"@material-ui/icons/InfoOutlined\";\n\nimport { useSelector } from \"react-redux\";\nimport { selectRoomId } from \"../features/appSlice\";\nimport ChatInput from \"./ChatInput\";\nimport { useCollection, useDocument } from \"react-firebase-hooks/firestore\";\nimport { db } from \"../firebase\";\nimport Message from \"./Message\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\n\nimport { auth } from \"../firebase\";\nimport { groupName } from \"./groupPrompt\";\n\nfunction Chat() {\n  const [user] = useAuthState(auth);\n  const chatRef = useRef(null);\n  const roomId = useSelector(selectRoomId);\n  //const userN = user?.uid;\n  const [roomDetails] = useDocument(\n    roomId && db.collection(groupName).doc(roomId)\n  );\n  const [roomMessages, loading] = useCollection(\n    roomId &&\n      db\n        .collection(groupName)\n        .doc(roomId)\n        .collection(\"messages\")\n        .orderBy(\"timestamp\", \"asc\")\n  );\n\n  useEffect(() => {\n    chatRef?.current?.scrollIntoView({\n      behavior: \"smooth\",\n    });\n  }, [roomId, loading]);\n\n  return (\n    <ChatContainer>\n      {roomDetails && roomMessages && (\n        <>\n          <Header>\n            <HeaderLeft>\n              <h4>\n                <strong>#{roomDetails?.data().name}</strong>\n              </h4>\n              <StarBorderIcon />\n            </HeaderLeft>\n\n            <HeaderRight>\n              <p>\n                <InfoOutlinedIcon /> Details\n              </p>\n            </HeaderRight>\n          </Header>\n\n          <ChatMessages>\n            {roomMessages?.docs.map((doc) => {\n              const { message, timestamp, user, userImage } = doc.data();\n              return (\n                <Message\n                  key={doc.id}\n                  message={message}\n                  timestamp={timestamp}\n                  user={user}\n                  userImage={userImage}\n                />\n              );\n            })}\n            <ChatBottom ref={chatRef} />\n          </ChatMessages>\n\n          <ChatInput\n            chatRef={chatRef}\n            channelName={roomDetails?.data().name}\n            channelId={roomId}\n          />\n        </>\n      )}\n    </ChatContainer>\n  );\n}\n\nexport default Chat;\n\nconst ChatBottom = styled.div`\n  padding-bottom: 100px;\n`;\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 20px;\n  border-bottom: 1px solid lightgray;\n`;\n\nconst ChatMessages = styled.div``;\n\nconst HeaderLeft = styled.div`\n  display: flex;\n  align-items: center;\n\n  > h4 {\n    display: flex;\n    text-transform: lowercase;\n    margin-right: 10px;\n  }\n\n  > h4 > .MuiSvgIcon-root {\n    margin-left: 10x;\n    font-size: 18px;\n  }\n`;\n\nconst HeaderRight = styled.div`\n  > p {\n    display: flex;\n    align-items: center;\n    font-size: 14px;\n  }\n`;\n\nconst ChatContainer = styled.div`\n  flex: 0.7;\n  flex-grow: 1;\n  overflow-y: scroll;\n  margin-top: 60px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"@material-ui/core\";\nimport { auth, provider } from \"../firebase\";\n\nfunction Login() {\n  const signIn = (e) => {\n    e.preventDefault();\n    auth.signInWithPopup(provider).catch((error) => alert(error.message));\n  };\n  return (\n    <LoginContainer>\n      <LoginInnerContainer>\n        <img src=\"https://images.photowall.com/products/57205/golden-retriever.jpg?h=699&q=85\"></img>\n        <h1>Sign In Now Nw sf kwj</h1>\n        <Button onClick={signIn}>Sign in with Google</Button>\n      </LoginInnerContainer>\n    </LoginContainer>\n  );\n}\n\nexport default Login;\n\nconst LoginContainer = styled.div`\n  background-color: #f5f5f5;\n  height: 100vh;\n  display: grid;\n  place-items: center;\n`;\nconst LoginInnerContainer = styled.div`\n  padding: 100px;\n  text-align: center;\n  background-color: white;\n  > img {\n    object-fit: contain;\n    height: 100px;\n    margin-bottom: 40px;\n  }\n\n  > button {\n    margin-top: 50px;\n    text-transform: inherit !important;\n    background-color: green !important;\n    color: white;\n  }\n`;\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Sidebar from \"./components/Sidebar\";\nimport styled from \"styled-components\";\nimport Chat from \"./components/Chat\";\nimport GroupPrompt from \"./components/groupPrompt\";\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { auth } from \"./firebase\";\nimport Login from \"./components/Login\";\nimport { db } from \"./firebase\";\n\nvar Spinner = require(\"react-spinkit\");\n\nfunction App() {\n  const [user, loading] = useAuthState(auth);\n\n  if (loading) {\n    return (\n      <AppLoading>\n        <AppLoadingContents>\n          <img src=\"https://images.photowall.com/products/57205/golden-retriever.jpg?h=699&q=85\"></img>\n          <Spinner name=\"ball-spin-fade-loader\" color=\"red\" fadeIn=\"none\" />\n        </AppLoadingContents>\n      </AppLoading>\n    );\n  }\n  return (\n    <div className=\"app\">\n      <Router>\n        {!user ? (\n          <Login />\n        ) : (\n          <>\n            <Header />\n            <AppBody>\n              <Sidebar />\n              <Switch>\n                <Route path=\"/\" exact>\n                  <Chat />\n                </Route>\n                <GroupPrompt />\n              </Switch>\n            </AppBody>\n          </>\n        )}\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n\nconst AppLoading = styled.div`\n  display: grid;\n  place-items: center;\n  height: 100vh;\n  width: 100%;\n`;\n\nconst AppLoadingContents = styled.div`\n  text-align: center;\n  padding-bottom: 100px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  > img {\n    height: 100px;\n    padding: 20px;\n    margin-bottom: 40px;\n  }\n`;\n\nconst AppBody = styled.div`\n  display: flex;\n  height: 100vh;\n`;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport appReducer from \"../features/appSlice\";\n\nexport const store = configureStore({\n  reducer: {\n    app: appReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}